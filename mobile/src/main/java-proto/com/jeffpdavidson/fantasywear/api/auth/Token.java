// Code generated by Wire protocol buffer compiler, do not edit.
package com.jeffpdavidson.fantasywear.api.auth;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class Token extends Message {

  public static final String DEFAULT_TOKEN = "";
  public static final String DEFAULT_TOKEN_SECRET = "";
  public static final String DEFAULT_SESSION_HANDLE = "";
  public static final Long DEFAULT_EXPIRATION_TIME_SEC = 0L;
  public static final Long DEFAULT_AUTHORIZATION_EXPIRATION_TIME_SEC = 0L;
  public static final String DEFAULT_REQUEST_AUTH_URL = "";
  public static final String DEFAULT_YAHOO_GUID = "";

  /**
   * The token. May be an access token or request token.
   */
  @ProtoField(tag = 1, type = STRING)
  public final String token;

  /**
   * The secret associated with the token.
   */
  @ProtoField(tag = 2, type = STRING)
  public final String token_secret;

  /**
   * A persistent credential that can be used to refresh expired access tokens.
   */
  @ProtoField(tag = 3, type = STRING)
  public final String session_handle;

  /**
   * Epoch time when the token will expire, in seconds.
   */
  @ProtoField(tag = 4, type = UINT64)
  public final Long expiration_time_sec;

  /**
   * Epoch time when the user's authorization will expire, in seconds. After this point the
   * session handle may no longer be used to refresh tokens.
   */
  @ProtoField(tag = 5, type = UINT64)
  public final Long authorization_expiration_time_sec;

  /**
   * For request tokens, the URL of the page where authorization can be obtained.
   */
  @ProtoField(tag = 6, type = STRING)
  public final String request_auth_url;

  /**
   * The introspective GUID of the user.
   */
  @ProtoField(tag = 7, type = STRING)
  public final String yahoo_guid;

  public Token(String token, String token_secret, String session_handle, Long expiration_time_sec, Long authorization_expiration_time_sec, String request_auth_url, String yahoo_guid) {
    this.token = token;
    this.token_secret = token_secret;
    this.session_handle = session_handle;
    this.expiration_time_sec = expiration_time_sec;
    this.authorization_expiration_time_sec = authorization_expiration_time_sec;
    this.request_auth_url = request_auth_url;
    this.yahoo_guid = yahoo_guid;
  }

  private Token(Builder builder) {
    this(builder.token, builder.token_secret, builder.session_handle, builder.expiration_time_sec, builder.authorization_expiration_time_sec, builder.request_auth_url, builder.yahoo_guid);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Token)) return false;
    Token o = (Token) other;
    return equals(token, o.token)
        && equals(token_secret, o.token_secret)
        && equals(session_handle, o.session_handle)
        && equals(expiration_time_sec, o.expiration_time_sec)
        && equals(authorization_expiration_time_sec, o.authorization_expiration_time_sec)
        && equals(request_auth_url, o.request_auth_url)
        && equals(yahoo_guid, o.yahoo_guid);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = token != null ? token.hashCode() : 0;
      result = result * 37 + (token_secret != null ? token_secret.hashCode() : 0);
      result = result * 37 + (session_handle != null ? session_handle.hashCode() : 0);
      result = result * 37 + (expiration_time_sec != null ? expiration_time_sec.hashCode() : 0);
      result = result * 37 + (authorization_expiration_time_sec != null ? authorization_expiration_time_sec.hashCode() : 0);
      result = result * 37 + (request_auth_url != null ? request_auth_url.hashCode() : 0);
      result = result * 37 + (yahoo_guid != null ? yahoo_guid.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Token> {

    public String token;
    public String token_secret;
    public String session_handle;
    public Long expiration_time_sec;
    public Long authorization_expiration_time_sec;
    public String request_auth_url;
    public String yahoo_guid;

    public Builder() {
    }

    public Builder(Token message) {
      super(message);
      if (message == null) return;
      this.token = message.token;
      this.token_secret = message.token_secret;
      this.session_handle = message.session_handle;
      this.expiration_time_sec = message.expiration_time_sec;
      this.authorization_expiration_time_sec = message.authorization_expiration_time_sec;
      this.request_auth_url = message.request_auth_url;
      this.yahoo_guid = message.yahoo_guid;
    }

    /**
     * The token. May be an access token or request token.
     */
    public Builder token(String token) {
      this.token = token;
      return this;
    }

    /**
     * The secret associated with the token.
     */
    public Builder token_secret(String token_secret) {
      this.token_secret = token_secret;
      return this;
    }

    /**
     * A persistent credential that can be used to refresh expired access tokens.
     */
    public Builder session_handle(String session_handle) {
      this.session_handle = session_handle;
      return this;
    }

    /**
     * Epoch time when the token will expire, in seconds.
     */
    public Builder expiration_time_sec(Long expiration_time_sec) {
      this.expiration_time_sec = expiration_time_sec;
      return this;
    }

    /**
     * Epoch time when the user's authorization will expire, in seconds. After this point the
     * session handle may no longer be used to refresh tokens.
     */
    public Builder authorization_expiration_time_sec(Long authorization_expiration_time_sec) {
      this.authorization_expiration_time_sec = authorization_expiration_time_sec;
      return this;
    }

    /**
     * For request tokens, the URL of the page where authorization can be obtained.
     */
    public Builder request_auth_url(String request_auth_url) {
      this.request_auth_url = request_auth_url;
      return this;
    }

    /**
     * The introspective GUID of the user.
     */
    public Builder yahoo_guid(String yahoo_guid) {
      this.yahoo_guid = yahoo_guid;
      return this;
    }

    @Override
    public Token build() {
      return new Token(this);
    }
  }
}
