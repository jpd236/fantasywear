// Code generated by Wire protocol buffer compiler, do not edit.
package com.jeffpdavidson.fantasywear.api.model;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

public final class Matchup extends Message {

  @ProtoField(tag = 1)
  public final Team my_team;

  @ProtoField(tag = 2)
  public final Team opponent_team;

  public Matchup(Team my_team, Team opponent_team) {
    this.my_team = my_team;
    this.opponent_team = opponent_team;
  }

  private Matchup(Builder builder) {
    this(builder.my_team, builder.opponent_team);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Matchup)) return false;
    Matchup o = (Matchup) other;
    return equals(my_team, o.my_team)
        && equals(opponent_team, o.opponent_team);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = my_team != null ? my_team.hashCode() : 0;
      result = result * 37 + (opponent_team != null ? opponent_team.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Matchup> {

    public Team my_team;
    public Team opponent_team;

    public Builder() {
    }

    public Builder(Matchup message) {
      super(message);
      if (message == null) return;
      this.my_team = message.my_team;
      this.opponent_team = message.opponent_team;
    }

    public Builder my_team(Team my_team) {
      this.my_team = my_team;
      return this;
    }

    public Builder opponent_team(Team opponent_team) {
      this.opponent_team = opponent_team;
      return this;
    }

    @Override
    public Matchup build() {
      return new Matchup(this);
    }
  }
}
